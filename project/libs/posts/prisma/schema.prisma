// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          String     @id @default(uuid())
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  publishAt   DateTime?  @map("publish_at")
  authorId    String     @map("author_id")
  ownerId     String?    @map("owner_id")
  ownerPostId String?
  ownerPost   Post?      @relation("OwnerPost", fields: [ownerPostId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ownerPosts  Post[]     @relation("OwnerPost")
  postType    PostType   @default(TEXT)
  postStatus  PostStatus @default(DRAFT)
  comments    Comment[]
  tags        Tag[]
  likes       Like[]
  title       String?

  @@index([title])
  @@map("posts")
}

enum PostType {
  VIDEO
  TEXT
  QUOTE
  PHOTO
  LINK
}

enum PostStatus {
  PUBLISHED
  DRAFT
}

model Comment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  ownerId   String   @map("owner_id")
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId    String   @map("post_id")
  message   String

  @@index([message])
  @@map("comments")
}

model Tag {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  text      String
  posts     Post[]

  @@index([text])
  @@map("tags")
}

model Like {
  ownerId   String   @map("owner_id")
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@id([postId, ownerId])
  @@map("likes")
}
